class GFXfont:
	def __init__(self):

		#   Format of the following GFXglyphs tuple is as follows:
		#
		#   bitmapOffset   - offset into the GFXbitmaps tuple 
		#   width   - width of the character 
		#   height  - height of the character 
		#   xAdvance    - The horizontal distance the cursor position must be incremented 
		#               (for left-to-right writing) or decremented (for right-to-left writing) 
		#                  by after each glyph is rendered when processing text. 
		#                   It is always positive for horizontal layouts, and null for vertical ones.
		#   xOffset - The horizontal distance from the current pen position to the
		#               glyph's left bbox (glyph's boundary box) edge. 
		#               It is positive for horizontal layouts, and in most cases negative for vertical ones.
		#   yOffset -  The vertical distance from the baseline to the top of the glyph'sbbox.
		#               It is usually positive for horizontal layouts, and negative for vertical ones.

		self.GFXglyphs = (
		(     0,   0,   0,   7,    0,    1 ),   ## 0x20 ' '
		(     0,   2,  17,   7,    2,  -16 ),   ## 0x21 '!'
		(     5,   6,   6,   9,    1,  -16 ),   ## 0x22 '"'
		(    10,  12,  16,  13,    1,  -15 ),   ## 0x23 '#'
		(    34,  12,  20,  13,    0,  -17 ),   ## 0x24 '$'
		(    64,  19,  19,  21,    1,  -17 ),   ## 0x25 '%'
		(   110,  14,  17,  16,    1,  -16 ),   ## 0x26 '&'
		(   140,   3,   6,   5,    1,  -16 ),   ## 0x27 '''
		(   143,   6,  22,   8,    2,  -16 ),   ## 0x28 '('
		(   160,   6,  22,   8,    0,  -16 ),   ## 0x29 ')'
		(   177,   8,   8,   9,    1,  -16 ),   ## 0x2A '*'
		(   185,  12,  12,  14,    1,  -11 ),   ## 0x2B '+'
		(   203,   3,   6,   7,    2,   -1 ),   ## 0x2C ','
		(   206,   6,   2,   8,    1,   -7 ),   ## 0x2D '-'
		(   208,   2,   2,   7,    2,   -1 ),   ## 0x2E '.'
		(   209,   7,  17,   7,    0,  -16 ),   ## 0x2F '/'
		(   224,  12,  16,  13,    1,  -15 ),   ## 0x30 '0'
		(   248,   6,  16,  13,    2,  -15 ),   ## 0x31 '1'
		(   260,  12,  16,  13,    1,  -15 ),   ## 0x32 '2'
		(   284,  12,  16,  13,    1,  -15 ),   ## 0x33 '3'
		(   308,  11,  16,  13,    1,  -15 ),   ## 0x34 '4'
		(   330,  12,  16,  13,    0,  -15 ),   ## 0x35 '5'
		(   354,  12,  16,  13,    1,  -15 ),   ## 0x36 '6'
		(   378,  12,  16,  13,    1,  -15 ),   ## 0x37 '7'
		(   402,  12,  16,  13,    1,  -15 ),   ## 0x38 '8'
		(   426,  11,  16,  13,    1,  -15 ),   ## 0x39 '9'
		(   448,   2,  13,   7,    2,  -12 ),   ## 0x3A ':'
		(   452,   2,  17,   7,    2,  -12 ),   ## 0x3B ';'
		(   457,  12,  12,  14,    1,  -11 ),   ## 0x3C '<'
		(   475,  12,   7,  14,    1,   -9 ),   ## 0x3D '='
		(   486,  12,  12,  14,    1,  -11 ),   ## 0x3E '>'
		(   504,  10,  17,  13,    1,  -16 ),   ## 0x3F '?'
		(   526,  17,  18,  24,    4,  -17 ),   ## 0x40 '@'
		(   565,  16,  17,  16,    0,  -16 ),   ## 0x41 'A'
		(   599,  13,  17,  16,    2,  -16 ),   ## 0x42 'B'
		(   627,  15,  17,  17,    1,  -16 ),   ## 0x43 'C'
		(   659,  14,  17,  17,    2,  -16 ),   ## 0x44 'D'
		(   689,  13,  17,  16,    2,  -16 ),   ## 0x45 'E'
		(   717,  12,  17,  15,    2,  -16 ),   ## 0x46 'F'
		(   743,  15,  17,  19,    1,  -16 ),   ## 0x47 'G'
		(   775,  14,  17,  17,    2,  -16 ),   ## 0x48 'H'
		(   805,   2,  17,   7,    2,  -16 ),   ## 0x49 'I'
		(   810,  11,  17,  12,   -1,  -16 ),   ## 0x4A 'J'
		(   834,  15,  17,  16,    2,  -16 ),   ## 0x4B 'K'
		(   866,  11,  17,  13,    2,  -16 ),   ## 0x4C 'L'
		(   890,  17,  17,  20,    2,  -16 ),   ## 0x4D 'M'
		(   927,  14,  17,  17,    2,  -16 ),   ## 0x4E 'N'
		(   957,  17,  17,  19,    1,  -16 ),   ## 0x4F 'O'
		(   994,  13,  17,  16,    2,  -16 ),   ## 0x50 'P'
		(  1022,  17,  18,  19,    1,  -16 ),   ## 0x51 'Q'
		(  1061,  15,  17,  17,    2,  -16 ),   ## 0x52 'R'
		(  1093,  14,  17,  16,    1,  -16 ),   ## 0x53 'S'
		(  1123,  14,  17,  15,    0,  -16 ),   ## 0x54 'T'
		(  1153,  14,  17,  17,    2,  -16 ),   ## 0x55 'U'
		(  1183,  16,  17,  16,    0,  -16 ),   ## 0x56 'V'
		(  1217,  22,  17,  23,    0,  -16 ),   ## 0x57 'W'
		(  1264,  16,  17,  16,    0,  -16 ),   ## 0x58 'X'
		(  1298,  16,  17,  16,    0,  -16 ),   ## 0x59 'Y'
		(  1332,  14,  17,  15,    0,  -16 ),   ## 0x5A 'Z'
		(  1362,   5,  22,   7,    2,  -16 ),   ## 0x5B '['
		(  1376,   7,  17,   7,    0,  -16 ),   ## 0x5C '\'
		(  1391,   5,  22,   7,    0,  -16 ),   ## 0x5D ']'
		(  1405,  12,  11,  11,    0,  -16 ),   ## 0x5E '^'
		(  1422,  13,   2,  13,    0,    2 ),   ## 0x5F '_'
		(  1426,   5,   3,   8,    0,  -16 ),   ## 0x60 '`'
		(  1428,  11,  13,  13,    1,  -12 ),   ## 0x61 'a'
		(  1446,  11,  17,  13,    1,  -16 ),   ## 0x62 'b'
		(  1470,  11,  13,  12,    1,  -12 ),   ## 0x63 'c'
		(  1488,  11,  17,  13,    1,  -16 ),   ## 0x64 'd'
		(  1512,  11,  13,  13,    1,  -12 ),   ## 0x65 'e'
		(  1530,   6,  17,   7,    0,  -16 ),   ## 0x66 'f'
		(  1543,  11,  18,  13,    1,  -12 ),   ## 0x67 'g'
		(  1568,  10,  17,  13,    2,  -16 ),   ## 0x68 'h'
		(  1590,   2,  17,   5,    1,  -16 ),   ## 0x69 'i'
		(  1595,   4,  22,   5,    0,  -16 ),   ## 0x6A 'j'
		(  1606,  11,  17,  12,    2,  -16 ),   ## 0x6B 'k'
		(  1630,   2,  17,   5,    1,  -16 ),   ## 0x6C 'l'
		(  1635,  16,  13,  20,    2,  -12 ),   ## 0x6D 'm'
		(  1661,  10,  13,  13,    2,  -12 ),   ## 0x6E 'n'
		(  1678,  12,  13,  13,    1,  -12 ),   ## 0x6F 'o'
		(  1698,  11,  18,  13,    1,  -12 ),   ## 0x70 'p'
		(  1723,  11,  18,  13,    1,  -12 ),   ## 0x71 'q'
		(  1748,   6,  13,   8,    2,  -12 ),   ## 0x72 'r'
		(  1758,  11,  13,  12,    0,  -12 ),   ## 0x73 's'
		(  1776,   6,  17,   7,    0,  -16 ),   ## 0x74 't'
		(  1789,  10,  13,  13,    2,  -12 ),   ## 0x75 'u'
		(  1806,  12,  13,  12,    0,  -12 ),   ## 0x76 'v'
		(  1826,  17,  13,  17,    0,  -12 ),   ## 0x77 'w'
		(  1854,  12,  13,  12,    0,  -12 ),   ## 0x78 'x'
		(  1874,  12,  19,  12,    0,  -12 ),   ## 0x79 'y'
		(  1903,  11,  13,  12,    1,  -12 ),   ## 0x7A 'z'
		(  1921,   6,  24,   8,    1,  -17 ),   ## 0x7B '{'
		(  1939,   2,  23,   6,    2,  -16 ),   ## 0x7C '|'
		(  1945,   6,  24,   8,    1,  -17 ),   ## 0x7D '}'
		(  1963,  11,   4,  14,    1,   -7 )	## 0x7E '~'
			)

		self.GFXfirst = 0x20
		self.GFXlast = 0x7E
		self.GFXyadvance = 27
		self.GFXMinYadvance = -17
				## from face->size->metrics.height
	def __repr__ (self):
		rows = ''
		for y in range(self.height):
			for x in range(self.width):
				rows += '*' if self.pixels[y * self.width + x] else ' '
		rows += '\n'
		return rows

## Approx. 2641 bytes
