class GFXfont:
	def __init__(self):

		#   Format of the following GFXglyphs tuple is as follows:
		#
		#   bitmapOffset   - offset into the GFXbitmaps tuple 
		#   width   - width of the character 
		#   height  - height of the character 
		#   xAdvance    - The horizontal distance the cursor position must be incremented 
		#               (for left-to-right writing) or decremented (for right-to-left writing) 
		#                  by after each glyph is rendered when processing text. 
		#                   It is always positive for horizontal layouts, and null for vertical ones.
		#   xOffset - The horizontal distance from the current pen position to the
		#               glyph's left bbox (glyph's boundary box) edge. 
		#               It is positive for horizontal layouts, and in most cases negative for vertical ones.
		#   yOffset -  The vertical distance from the baseline to the top of the glyph'sbbox.
		#               It is usually positive for horizontal layouts, and negative for vertical ones.

		self.GFXglyphs = (
		(     0,   0,   0,  10,    0,    1 ),   ## 0x20 ' '
		(     0,  10,  25,  12,    2,  -24 ),   ## 0x21 '!'
		(    32,  14,   9,  17,    5,  -24 ),   ## 0x22 '"'
		(    48,  19,  25,  19,    2,  -24 ),   ## 0x23 '#'
		(   108,  19,  30,  19,    1,  -26 ),   ## 0x24 '$'
		(   180,  24,  25,  28,    3,  -24 ),   ## 0x25 '%'
		(   255,  22,  25,  25,    3,  -24 ),   ## 0x26 '&'
		(   324,   7,   9,   8,    5,  -24 ),   ## 0x27 '''
		(   332,  14,  32,  12,    2,  -24 ),   ## 0x28 '('
		(   388,  14,  32,  12,   -3,  -24 ),   ## 0x29 ')'
		(   444,  12,  12,  14,    3,  -24 ),   ## 0x2A '*'
		(   462,  18,  18,  20,    2,  -21 ),   ## 0x2B '+'
		(   503,   8,  10,  10,    0,   -4 ),   ## 0x2C ','
		(   513,  10,   5,  12,    1,  -11 ),   ## 0x2D '-'
		(   520,   6,   5,  10,    2,   -4 ),   ## 0x2E '.'
		(   524,  16,  25,  10,   -2,  -24 ),   ## 0x2F '/'
		(   574,  17,  25,  19,    2,  -24 ),   ## 0x30 '0'
		(   628,  13,  25,  19,    4,  -24 ),   ## 0x31 '1'
		(   669,  17,  25,  19,    2,  -24 ),   ## 0x32 '2'
		(   723,  18,  25,  19,    1,  -24 ),   ## 0x33 '3'
		(   780,  20,  25,  19,    0,  -24 ),   ## 0x34 '4'
		(   843,  18,  25,  19,    2,  -24 ),   ## 0x35 '5'
		(   900,  16,  25,  19,    3,  -24 ),   ## 0x36 '6'
		(   950,  17,  25,  19,    4,  -24 ),   ## 0x37 '7'
		(  1004,  17,  25,  19,    2,  -24 ),   ## 0x38 '8'
		(  1058,  17,  25,  19,    2,  -24 ),   ## 0x39 '9'
		(  1112,   9,  18,  12,    2,  -17 ),   ## 0x3A ':'
		(  1133,  11,  23,  12,    1,  -17 ),   ## 0x3B ';'
		(  1165,  17,  19,  20,    3,  -21 ),   ## 0x3C '<'
		(  1206,  17,  11,  20,    3,  -17 ),   ## 0x3D '='
		(  1230,  17,  19,  20,    3,  -21 ),   ## 0x3E '>'
		(  1271,  17,  25,  21,    4,  -24 ),   ## 0x3F '?'
		(  1325,  33,  33,  34,    2,  -24 ),   ## 0x40 '@'
		(  1462,  25,  25,  25,   -1,  -24 ),   ## 0x41 'A'
		(  1541,  24,  25,  25,    1,  -24 ),   ## 0x42 'B'
		(  1616,  23,  25,  25,    3,  -24 ),   ## 0x43 'C'
		(  1688,  24,  25,  25,    1,  -24 ),   ## 0x44 'D'
		(  1763,  24,  25,  23,    1,  -24 ),   ## 0x45 'E'
		(  1838,  23,  25,  21,    1,  -24 ),   ## 0x46 'F'
		(  1910,  24,  25,  27,    3,  -24 ),   ## 0x47 'G'
		(  1985,  26,  25,  25,    1,  -24 ),   ## 0x48 'H'
		(  2067,  11,  25,  10,    1,  -24 ),   ## 0x49 'I'
		(  2102,  21,  25,  19,    1,  -24 ),   ## 0x4A 'J'
		(  2168,  27,  25,  25,    1,  -24 ),   ## 0x4B 'K'
		(  2253,  19,  25,  21,    1,  -24 ),   ## 0x4C 'L'
		(  2313,  32,  25,  30,    0,  -24 ),   ## 0x4D 'M'
		(  2413,  26,  25,  25,    1,  -24 ),   ## 0x4E 'N'
		(  2495,  24,  25,  26,    2,  -24 ),   ## 0x4F 'O'
		(  2570,  23,  25,  23,    1,  -24 ),   ## 0x50 'P'
		(  2642,  24,  28,  26,    2,  -24 ),   ## 0x51 'Q'
		(  2726,  25,  25,  25,    1,  -24 ),   ## 0x52 'R'
		(  2805,  22,  25,  23,    1,  -24 ),   ## 0x53 'S'
		(  2874,  21,  25,  21,    3,  -24 ),   ## 0x54 'T'
		(  2940,  26,  25,  25,    2,  -24 ),   ## 0x55 'U'
		(  3022,  25,  25,  23,    2,  -24 ),   ## 0x56 'V'
		(  3101,  34,  25,  33,    3,  -24 ),   ## 0x57 'W'
		(  3208,  28,  25,  23,   -1,  -24 ),   ## 0x58 'X'
		(  3296,  23,  25,  23,    4,  -24 ),   ## 0x59 'Y'
		(  3368,  22,  25,  21,    1,  -24 ),   ## 0x5A 'Z'
		(  3437,  16,  32,  12,   -1,  -24 ),   ## 0x5B '['
		(  3501,   6,  25,  10,    4,  -24 ),   ## 0x5C '\'
		(  3520,  16,  32,  13,   -2,  -24 ),   ## 0x5D ']'
		(  3584,  17,  14,  20,    3,  -24 ),   ## 0x5E '^'
		(  3614,  19,   3,  19,    0,    5 ),   ## 0x5F '_'
		(  3622,   7,   5,  12,    5,  -24 ),   ## 0x60 '`'
		(  3627,  18,  19,  19,    1,  -18 ),   ## 0x61 'a'
		(  3670,  20,  25,  21,    1,  -24 ),   ## 0x62 'b'
		(  3733,  17,  19,  19,    2,  -18 ),   ## 0x63 'c'
		(  3774,  22,  25,  21,    2,  -24 ),   ## 0x64 'd'
		(  3843,  17,  19,  19,    2,  -18 ),   ## 0x65 'e'
		(  3884,  14,  25,  12,    2,  -24 ),   ## 0x66 'f'
		(  3928,  22,  26,  21,    0,  -18 ),   ## 0x67 'g'
		(  4000,  20,  25,  21,    1,  -24 ),   ## 0x68 'h'
		(  4063,  11,  25,   9,    1,  -24 ),   ## 0x69 'i'
		(  4098,  17,  32,   9,   -5,  -24 ),   ## 0x6A 'j'
		(  4166,  20,  25,  19,    1,  -24 ),   ## 0x6B 'k'
		(  4229,  11,  25,   9,    1,  -24 ),   ## 0x6C 'l'
		(  4264,  30,  19,  31,    1,  -18 ),   ## 0x6D 'm'
		(  4336,  20,  19,  21,    1,  -18 ),   ## 0x6E 'n'
		(  4384,  19,  19,  21,    2,  -18 ),   ## 0x6F 'o'
		(  4430,  21,  26,  21,    0,  -18 ),   ## 0x70 'p'
		(  4499,  21,  26,  21,    2,  -18 ),   ## 0x71 'q'
		(  4568,  16,  19,  14,    1,  -18 ),   ## 0x72 'r'
		(  4606,  19,  19,  19,    0,  -18 ),   ## 0x73 's'
		(  4652,  11,  24,  12,    3,  -23 ),   ## 0x74 't'
		(  4685,  20,  19,  20,    1,  -18 ),   ## 0x75 'u'
		(  4733,  19,  19,  19,    2,  -18 ),   ## 0x76 'v'
		(  4779,  27,  19,  27,    3,  -18 ),   ## 0x77 'w'
		(  4844,  22,  19,  19,   -1,  -18 ),   ## 0x78 'x'
		(  4897,  22,  26,  19,    1,  -18 ),   ## 0x79 'y'
		(  4969,  18,  19,  18,    1,  -18 ),   ## 0x7A 'z'
		(  5012,  15,  32,  14,    1,  -24 ),   ## 0x7B '{'
		(  5072,   4,  33,  10,    3,  -24 ),   ## 0x7C '|'
		(  5089,  15,  32,  14,   -2,  -24 ),   ## 0x7D '}'
		(  5149,  18,   8,  20,    2,  -15 )	## 0x7E '~'
			)

		self.GFXfirst = 0x20
		self.GFXlast = 0x7E
		self.GFXyadvance = 41
		self.GFXMinYadvance = -26
				## from face->size->metrics.height
	def __repr__ (self):
		rows = ''
		for y in range(self.height):
			for x in range(self.width):
				rows += '*' if self.pixels[y * self.width + x] else ' '
		rows += '\n'
		return rows

## Approx. 5839 bytes
