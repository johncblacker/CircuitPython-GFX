class GFXfont:
	def __init__(self):
		self.GFXbitmaps = (
		0xFF, 0xFF, 0xFF, 0xC3, 0xC0, 0xDE, 0xF7, 0xBD, 0xEC, 0x04, 0x60, 0x22,
		0x03, 0x10, 0x18, 0x80, 0xC4, 0x3F, 0xF9, 0xFF, 0xC1, 0x18, 0x08, 0x80,
		0xC4, 0x1F, 0xFC, 0xFF, 0xE1, 0x98, 0x08, 0xC0, 0x46, 0x02, 0x30, 0x11,
		0x00, 0x04, 0x00, 0x80, 0xFC, 0x3F, 0xEE, 0x4D, 0x88, 0xF1, 0x06, 0x20,
		0xF4, 0x0F, 0xC0, 0x7E, 0x02, 0xE0, 0x4E, 0x08, 0xF1, 0x1E, 0x23, 0x64,
		0xCF, 0xF8, 0xFC, 0x02, 0x00, 0x40, 0x3C, 0x02, 0x0F, 0xC0, 0x83, 0x9C,
		0x30, 0x61, 0x84, 0x0C, 0x31, 0x01, 0xCE, 0x20, 0x1F, 0x88, 0x01, 0xE1,
		0x00, 0x00, 0x47, 0x80, 0x11, 0xF8, 0x02, 0x73, 0x80, 0x8C, 0x30, 0x11,
		0x86, 0x04, 0x30, 0xC1, 0x87, 0x38, 0x20, 0x7E, 0x08, 0x07, 0x80, 0x0F,
		0x00, 0x3F, 0x00, 0xE7, 0x01, 0x86, 0x03, 0x0C, 0x07, 0x30, 0x07, 0xE0,
		0x07, 0x00, 0x3E, 0x00, 0xEE, 0x23, 0x8E, 0xC6, 0x0F, 0x8C, 0x0F, 0x18,
		0x0E, 0x38, 0x7C, 0x3F, 0xCC, 0x1F, 0x1C, 0xFF, 0xF0, 0x18, 0x43, 0x0C,
		0x61, 0x86, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x10, 0x61, 0x82, 0x0C,
		0x10, 0x60, 0x40, 0x83, 0x0C, 0x18, 0x61, 0x83, 0x0C, 0x30, 0xC3, 0x0C,
		0x30, 0xC6, 0x18, 0x63, 0x0C, 0x21, 0x80, 0x18, 0x18, 0xDB, 0x7E, 0x3C,
		0x64, 0x66, 0x00, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60,
		0xFF, 0xFF, 0xFF, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x6C,
		0x94, 0x00, 0xFF, 0xF0, 0xF0, 0x03, 0x02, 0x06, 0x06, 0x04, 0x0C, 0x0C,
		0x08, 0x18, 0x18, 0x10, 0x30, 0x30, 0x20, 0x60, 0x60, 0x40, 0x1F, 0x07,
		0xF1, 0xC7, 0x30, 0x6E, 0x0F, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F,
		0x01, 0xE0, 0x3C, 0x0E, 0xC1, 0x9C, 0x71, 0xFC, 0x1F, 0x00, 0x0C, 0x33,
		0xFF, 0xFC, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x1F,
		0x07, 0xF9, 0xC7, 0x70, 0x3C, 0x07, 0x80, 0xC0, 0x18, 0x06, 0x01, 0xC0,
		0xF0, 0x38, 0x1C, 0x07, 0x00, 0xC0, 0x30, 0x07, 0xFF, 0xFF, 0xE0, 0x0F,
		0x03, 0xFC, 0x30, 0xE6, 0x06, 0x60, 0x60, 0x06, 0x00, 0xC0, 0x78, 0x07,
		0xC0, 0x0E, 0x00, 0x30, 0x03, 0x60, 0x36, 0x03, 0x70, 0xE3, 0xFC, 0x1F,
		0x80, 0x01, 0x80, 0x38, 0x03, 0x80, 0x78, 0x0D, 0x80, 0xD8, 0x19, 0x83,
		0x18, 0x31, 0x86, 0x18, 0xC1, 0x8F, 0xFF, 0xFF, 0xF0, 0x18, 0x01, 0x80,
		0x18, 0x01, 0x80, 0x1F, 0xE1, 0xFE, 0x30, 0x03, 0x00, 0x30, 0x03, 0x00,
		0x3F, 0x83, 0xFE, 0x30, 0xE0, 0x07, 0x00, 0x30, 0x03, 0x60, 0x36, 0x07,
		0x70, 0xE3, 0xFC, 0x0F, 0x80, 0x0F, 0x07, 0xF9, 0xC3, 0x30, 0x36, 0x01,
		0x80, 0x33, 0xC7, 0xFE, 0xF1, 0xDC, 0x1F, 0x01, 0xE0, 0x3C, 0x06, 0xC1,
		0xDC, 0x71, 0xFC, 0x1F, 0x00, 0xFF, 0xFF, 0xFC, 0x03, 0x80, 0x60, 0x18,
		0x07, 0x00, 0xC0, 0x30, 0x06, 0x01, 0xC0, 0x30, 0x06, 0x01, 0xC0, 0x30,
		0x06, 0x00, 0xC0, 0x38, 0x00, 0x0F, 0x07, 0xF9, 0xC3, 0xB0, 0x36, 0x06,
		0xC0, 0xCC, 0x30, 0xFC, 0x3F, 0xCC, 0x1F, 0x01, 0xE0, 0x3C, 0x07, 0x80,
		0xD8, 0x73, 0xFE, 0x1F, 0x00, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x6C, 0x07,
		0x80, 0xF0, 0x1F, 0x07, 0x71, 0xEF, 0xEC, 0x79, 0x80, 0x7C, 0x0D, 0x81,
		0x98, 0x63, 0xFC, 0x1E, 0x00, 0xF0, 0x00, 0x03, 0xC0, 0xF0, 0x00, 0x03,
		0xD7, 0x00, 0x00, 0x30, 0x0F, 0x03, 0xC0, 0xF0, 0x7C, 0x0E, 0x00, 0xF0,
		0x03, 0xC0, 0x0F, 0x00, 0x3E, 0x00, 0xF0, 0x01, 0xFF, 0xFF, 0xFF, 0x00,
		0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x80, 0x0E, 0x00, 0x7C, 0x00,
		0xF0, 0x03, 0xC0, 0x0F, 0x00, 0xF0, 0x7C, 0x1F, 0x07, 0x80, 0xE0, 0x08,
		0x00, 0x0F, 0x07, 0xF8, 0xC3, 0xB8, 0x36, 0x06, 0xC0, 0xC0, 0x38, 0x06,
		0x01, 0x80, 0x60, 0x1C, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00, 0x30, 0x06,
		0x00, 0x03, 0xF0, 0x07, 0xFE, 0x07, 0x03, 0x86, 0x79, 0xE6, 0x7F, 0xBB,
		0x71, 0xCF, 0x30, 0xC7, 0xB0, 0x63, 0xD8, 0x31, 0xEC, 0x11, 0xB6, 0x39,
		0xCD, 0xFF, 0xC6, 0x73, 0xB1, 0x80, 0x38, 0x70, 0x78, 0x1F, 0xF8, 0x03,
		0xF0, 0x00, 0x01, 0x80, 0x03, 0xC0, 0x03, 0xC0, 0x07, 0xE0, 0x06, 0x60,
		0x06, 0x60, 0x0C, 0x70, 0x0C, 0x30, 0x0C, 0x30, 0x18, 0x38, 0x1F, 0xF8,
		0x3F, 0xF8, 0x30, 0x1C, 0x30, 0x0C, 0x70, 0x0C, 0x60, 0x0E, 0x60, 0x06,
		0xFF, 0xC7, 0xFF, 0x30, 0x1D, 0x80, 0x6C, 0x03, 0x60, 0x1B, 0x01, 0x9F,
		0xF8, 0xFF, 0xE6, 0x01, 0xB0, 0x07, 0x80, 0x3C, 0x01, 0xE0, 0x0F, 0x00,
		0xDF, 0xFE, 0xFF, 0xC0, 0x07, 0xE0, 0x3F, 0xE0, 0xE0, 0xE3, 0x80, 0xE6,
		0x00, 0xDC, 0x00, 0x30, 0x00, 0x60, 0x00, 0xC0, 0x01, 0x80, 0x03, 0x00,
		0x06, 0x00, 0x66, 0x00, 0xCE, 0x03, 0x8E, 0x0E, 0x0F, 0xF8, 0x07, 0xC0,
		0xFF, 0xC3, 0xFF, 0x8C, 0x07, 0x30, 0x0E, 0xC0, 0x1B, 0x00, 0x3C, 0x00,
		0xF0, 0x03, 0xC0, 0x0F, 0x00, 0x3C, 0x00, 0xF0, 0x03, 0xC0, 0x1B, 0x00,
		0xEC, 0x07, 0x3F, 0xF8, 0xFF, 0xC0, 0xFF, 0xFF, 0xFF, 0xF0, 0x01, 0x80,
		0x0C, 0x00, 0x60, 0x03, 0x00, 0x1F, 0xFE, 0xFF, 0xF6, 0x00, 0x30, 0x01,
		0x80, 0x0C, 0x00, 0x60, 0x03, 0x00, 0x1F, 0xFF, 0xFF, 0xF8, 0xFF, 0xFF,
		0xFF, 0xC0, 0x0C, 0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x0F, 0xFE, 0xFF, 0xEC,
		0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x00,
		0x07, 0xE0, 0x3F, 0xF0, 0xE0, 0xF3, 0x80, 0x66, 0x00, 0xFC, 0x00, 0x30,
		0x00, 0x60, 0x7F, 0xC0, 0xFF, 0x80, 0x0F, 0x00, 0x1E, 0x00, 0x36, 0x00,
		0xEE, 0x03, 0xCE, 0x0F, 0x8F, 0xFB, 0x07, 0xE2, 0xC0, 0x1E, 0x00, 0xF0,
		0x07, 0x80, 0x3C, 0x01, 0xE0, 0x0F, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x00,
		0xF0, 0x07, 0x80, 0x3C, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0xC0, 0x18,
		0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0,
		0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0F, 0x03, 0xC0, 0xF0, 0x3E, 0x19,
		0xFE, 0x3F, 0x00, 0xC0, 0x3B, 0x01, 0xCC, 0x0E, 0x30, 0x70, 0xC3, 0x83,
		0x1C, 0x0C, 0xE0, 0x37, 0x80, 0xFE, 0x03, 0xDC, 0x0E, 0x38, 0x30, 0x70,
		0xC1, 0xC3, 0x03, 0x8C, 0x07, 0x30, 0x1C, 0xC0, 0x38, 0xC0, 0x18, 0x03,
		0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00,
		0x60, 0x0C, 0x01, 0x80, 0x30, 0x07, 0xFF, 0xFF, 0xE0, 0xE0, 0x07, 0xF0,
		0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xD8, 0x1B, 0xD8, 0x1B, 0xD8, 0x1B, 0xCC,
		0x33, 0xCC, 0x33, 0xCC, 0x33, 0xC6, 0x63, 0xC6, 0x63, 0xC6, 0x63, 0xC3,
		0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC1, 0x83, 0xE0, 0x1F, 0x00, 0xFC, 0x07,
		0xF0, 0x3D, 0x81, 0xEE, 0x0F, 0x38, 0x78, 0xC3, 0xC7, 0x1E, 0x18, 0xF0,
		0x67, 0x83, 0xBC, 0x0D, 0xE0, 0x3F, 0x01, 0xF8, 0x07, 0xC0, 0x38, 0x07,
		0xE0, 0x1F, 0xF8, 0x38, 0x1C, 0x70, 0x0E, 0x60, 0x06, 0xE0, 0x07, 0xC0,
		0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xE0, 0x07, 0x60,
		0x06, 0x70, 0x0E, 0x38, 0x1C, 0x1F, 0xF8, 0x07, 0xE0, 0xFF, 0x8F, 0xFE,
		0xC0, 0x7C, 0x03, 0xC0, 0x3C, 0x03, 0xC0, 0x3C, 0x06, 0xFF, 0xEF, 0xF8,
		0xC0, 0x0C, 0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x00, 0x07,
		0xE0, 0x1F, 0xF8, 0x38, 0x1C, 0x70, 0x0E, 0x60, 0x06, 0xE0, 0x07, 0xC0,
		0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xE0, 0x07, 0x60,
		0x66, 0x70, 0x7E, 0x38, 0x1C, 0x1F, 0xFC, 0x07, 0xE7, 0x00, 0x02, 0xFF,
		0xC3, 0xFF, 0xCC, 0x03, 0xB0, 0x06, 0xC0, 0x1B, 0x00, 0x6C, 0x01, 0xB0,
		0x0C, 0xFF, 0xE3, 0xFF, 0xCC, 0x03, 0xB0, 0x06, 0xC0, 0x1B, 0x00, 0x6C,
		0x01, 0xB0, 0x06, 0xC0, 0x1C, 0x00, 0x00, 0x0F, 0x81, 0xFF, 0x0C, 0x1C,
		0xC0, 0x66, 0x01, 0xB0, 0x01, 0xC0, 0x07, 0xE0, 0x0F, 0xE0, 0x0F, 0x80,
		0x0F, 0x80, 0x3C, 0x01, 0xF0, 0x0D, 0xC0, 0xC7, 0xFE, 0x0F, 0xC0, 0xFF,
		0xFF, 0xFF, 0xF0, 0x30, 0x00, 0xC0, 0x03, 0x00, 0x0C, 0x00, 0x30, 0x00,
		0xC0, 0x03, 0x00, 0x0C, 0x00, 0x30, 0x00, 0xC0, 0x03, 0x00, 0x0C, 0x00,
		0x30, 0x00, 0xC0, 0x03, 0x00, 0xC0, 0x1E, 0x00, 0xF0, 0x07, 0x80, 0x3C,
		0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0xC0, 0x1E, 0x00, 0xF0, 0x07, 0x80,
		0x3C, 0x01, 0xF0, 0x19, 0xC1, 0xC7, 0xFC, 0x1F, 0x80, 0x60, 0x0E, 0x70,
		0x0E, 0x70, 0x0C, 0x30, 0x1C, 0x38, 0x1C, 0x38, 0x18, 0x18, 0x38, 0x1C,
		0x38, 0x0C, 0x30, 0x0C, 0x70, 0x0E, 0x60, 0x06, 0x60, 0x06, 0xE0, 0x07,
		0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0x80, 0x60, 0x38, 0x1D, 0x81, 0xE0,
		0x66, 0x07, 0x81, 0x9C, 0x1E, 0x06, 0x30, 0x7C, 0x38, 0xC3, 0x30, 0xC3,
		0x0C, 0xC3, 0x0E, 0x33, 0x0C, 0x18, 0xC6, 0x70, 0x66, 0x19, 0x81, 0x98,
		0x66, 0x06, 0x61, 0x98, 0x0F, 0x03, 0xE0, 0x3C, 0x0F, 0x00, 0xF0, 0x3C,
		0x03, 0xC0, 0x70, 0x06, 0x01, 0xC0, 0x70, 0x0E, 0x38, 0x1C, 0x38, 0x18,
		0x1C, 0x38, 0x0C, 0x70, 0x0E, 0x60, 0x07, 0xC0, 0x03, 0xC0, 0x03, 0x80,
		0x03, 0xC0, 0x07, 0xE0, 0x0E, 0x60, 0x0C, 0x70, 0x1C, 0x38, 0x38, 0x18,
		0x30, 0x1C, 0x70, 0x0E, 0x70, 0x0E, 0x30, 0x0C, 0x38, 0x1C, 0x18, 0x18,
		0x1C, 0x38, 0x0C, 0x30, 0x06, 0x60, 0x06, 0xE0, 0x03, 0xC0, 0x01, 0x80,
		0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80,
		0x01, 0x80, 0x7F, 0xFB, 0xFF, 0xC0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0,
		0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x03, 0x00, 0x38, 0x03, 0x80, 0x38,
		0x03, 0x80, 0x1F, 0xFF, 0xFF, 0xF8, 0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xC6,
		0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8F, 0xFC, 0x40, 0x60, 0x60, 0x20,
		0x30, 0x30, 0x10, 0x18, 0x18, 0x08, 0x0C, 0x0C, 0x04, 0x06, 0x06, 0x02,
		0x03, 0xFF, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18,
		0xC6, 0x3F, 0xFC, 0x02, 0x00, 0x38, 0x01, 0xC0, 0x1B, 0x00, 0xD8, 0x0C,
		0x60, 0x63, 0x06, 0x0C, 0x30, 0x63, 0x01, 0x98, 0x0C, 0xFF, 0xF8, 0x61,
		0x84, 0x30, 0x1F, 0x03, 0xF8, 0x61, 0xC6, 0x0C, 0x00, 0xC0, 0x3C, 0x3F,
		0xC6, 0x0C, 0xC0, 0xCC, 0x0C, 0xE3, 0xC7, 0xFF, 0x3C, 0x70, 0xC0, 0x18,
		0x03, 0x00, 0x60, 0x0C, 0xF1, 0xFF, 0x3C, 0x77, 0x07, 0xC0, 0x78, 0x0F,
		0x01, 0xE0, 0x3C, 0x07, 0xC1, 0xBC, 0x77, 0xFC, 0xCF, 0x00, 0x1F, 0x07,
		0xF1, 0xC7, 0x70, 0x6C, 0x0D, 0x80, 0x30, 0x06, 0x00, 0xC0, 0xDC, 0x19,
		0xC7, 0x1F, 0xC1, 0xF0, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x31, 0xE6, 0x7E,
		0xDC, 0x7F, 0x07, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x06, 0xC1, 0xDC,
		0x79, 0xFF, 0x1E, 0x60, 0x1F, 0x07, 0xF1, 0xC3, 0x30, 0x3C, 0x07, 0xFF,
		0xFF, 0xFE, 0x00, 0xC0, 0x1C, 0x0D, 0xC3, 0x1F, 0xC1, 0xF0, 0x1C, 0xF3,
		0x0C, 0xFF, 0xF3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0x1E,
		0x67, 0xED, 0xC7, 0xF0, 0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x6C,
		0x1D, 0xC7, 0x9F, 0xF1, 0xF6, 0x00, 0xF0, 0x3B, 0x0E, 0x7F, 0xC3, 0xE0,
		0xC0, 0x30, 0x0C, 0x03, 0x00, 0xCF, 0x3F, 0xEF, 0x1F, 0x83, 0xC0, 0xF0,
		0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xC0, 0xF0, 0xFF,
		0xFF, 0xFF, 0xC0, 0x33, 0x00, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
		0x33, 0xFE, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x19, 0x86, 0x31, 0x86,
		0x60, 0xD8, 0x1F, 0x83, 0xF0, 0x77, 0x0C, 0x61, 0x8E, 0x30, 0xE6, 0x0C,
		0xC1, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xCE, 0x3C, 0xDF, 0x7E, 0xF3,
		0xC7, 0xE1, 0xC3, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1,
		0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xCF, 0x37, 0xEF,
		0x1F, 0x83, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03,
		0xC0, 0xC0, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x6C, 0x07, 0x80, 0xF0, 0x1E,
		0x03, 0xC0, 0x7C, 0x19, 0xC7, 0x1F, 0xC1, 0xF0, 0xCF, 0x1B, 0xF3, 0xC7,
		0x70, 0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x7C, 0x1B, 0x87, 0x7F,
		0xCC, 0xF1, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x00, 0x1E, 0x67, 0xED,
		0xC7, 0xF0, 0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x6C, 0x1D, 0xC7,
		0x9F, 0xF1, 0xE6, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0xCF, 0x7F,
		0x38, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC0, 0x1F, 0x07, 0xF9, 0xC3,
		0x30, 0x36, 0x00, 0x78, 0x07, 0xE0, 0x0F, 0x00, 0x6C, 0x0D, 0xC3, 0xBF,
		0xE1, 0xF8, 0x30, 0xC3, 0x0C, 0xFF, 0xF3, 0x0C, 0x30, 0xC3, 0x0C, 0x30,
		0xC3, 0x0F, 0x1C, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F,
		0x03, 0xC0, 0xF0, 0x7E, 0x3D, 0xFB, 0x3C, 0xC0, 0xE0, 0x66, 0x06, 0x60,
		0xE7, 0x0C, 0x30, 0xC3, 0x1C, 0x39, 0x81, 0x98, 0x19, 0x80, 0xF0, 0x0F,
		0x00, 0xF0, 0x06, 0x00, 0xE1, 0xC3, 0xB0, 0xE1, 0x98, 0x70, 0xCC, 0x28,
		0x63, 0x36, 0x21, 0x9B, 0x30, 0xCD, 0x98, 0x64, 0x4C, 0x1E, 0x34, 0x0F,
		0x1E, 0x07, 0x8F, 0x03, 0x83, 0x80, 0xC1, 0x80, 0x60, 0xE7, 0x0C, 0x39,
		0xC1, 0x98, 0x1F, 0x00, 0xF0, 0x0E, 0x00, 0xF0, 0x1F, 0x81, 0x98, 0x31,
		0xC7, 0x0E, 0x60, 0x60, 0x60, 0x33, 0x83, 0x8C, 0x18, 0x60, 0xC3, 0x8E,
		0x0C, 0x60, 0x63, 0x01, 0xB0, 0x0D, 0x80, 0x6C, 0x01, 0xC0, 0x0E, 0x00,
		0x70, 0x03, 0x00, 0x18, 0x01, 0xC0, 0x3C, 0x01, 0xC0, 0x00, 0xFF, 0xDF,
		0xF8, 0x06, 0x01, 0xC0, 0x70, 0x1C, 0x03, 0x00, 0xC0, 0x30, 0x0E, 0x03,
		0x80, 0x7F, 0xEF, 0xFC, 0x00, 0x73, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC6,
		0x38, 0xE1, 0x83, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC1, 0xC0, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x83, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC1,
		0x87, 0x1C, 0x63, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xCE, 0x00, 0x00, 0x03,
		0xC2, 0x7F, 0xE4, 0x3C, 0x00, 0x00 )


		#   Format of the following GFXglyphs tuple is as follows:
		#
		#   bitmapOffset   - offset into the GFXbitmaps tuple 
		#   width   - width of the character 
		#   height  - height of the character 
		#   xAdvance    - The horizontal distance the cursor position must be incremented 
		#               (for left-to-right writing) or decremented (for right-to-left writing) 
		#                  by after each glyph is rendered when processing text. 
		#                   It is always positive for horizontal layouts, and null for vertical ones.
		#   xOffset - The horizontal distance from the current pen position to the
		#               glyph's left bbox (glyph's boundary box) edge. 
		#               It is positive for horizontal layouts, and in most cases negative for vertical ones.
		#   yOffset -  The vertical distance from the baseline to the top of the glyph'sbbox.
		#               It is usually positive for horizontal layouts, and negative for vertical ones.

		self.GFXglyphs = (
		(     0,   0,   0,   7,    0,    1 ),   ## 0x20 ' '
		(     0,   2,  17,   6,    2,  -16 ),   ## 0x21 '!'
		(     5,   5,   6,   9,    2,  -16 ),   ## 0x22 '"'
		(     9,  13,  17,  13,    0,  -16 ),   ## 0x23 '#'
		(    37,  11,  21,  13,    1,  -18 ),   ## 0x24 '$'
		(    66,  19,  17,  21,    1,  -16 ),   ## 0x25 '%'
		(   107,  15,  17,  16,    1,  -16 ),   ## 0x26 '&'
		(   139,   2,   6,   4,    1,  -16 ),   ## 0x27 '''
		(   141,   6,  22,   8,    2,  -16 ),   ## 0x28 '('
		(   158,   6,  22,   8,    0,  -16 ),   ## 0x29 ')'
		(   175,   8,   8,  10,    1,  -16 ),   ## 0x2A '*'
		(   183,  12,  13,  14,    1,  -12 ),   ## 0x2B '+'
		(   203,   3,   6,   6,    1,   -1 ),   ## 0x2C ','
		(   206,   6,   2,   8,    1,   -7 ),   ## 0x2D '-'
		(   208,   2,   2,   6,    2,   -1 ),   ## 0x2E '.'
		(   209,   8,  17,   7,   -1,  -16 ),   ## 0x2F '/'
		(   226,  11,  17,  13,    1,  -16 ),   ## 0x30 '0'
		(   250,   6,  17,  13,    2,  -16 ),   ## 0x31 '1'
		(   263,  11,  17,  13,    1,  -16 ),   ## 0x32 '2'
		(   287,  12,  17,  13,    0,  -16 ),   ## 0x33 '3'
		(   313,  12,  17,  14,    1,  -16 ),   ## 0x34 '4'
		(   339,  12,  17,  13,    0,  -16 ),   ## 0x35 '5'
		(   365,  11,  17,  13,    1,  -16 ),   ## 0x36 '6'
		(   389,  11,  17,  13,    1,  -16 ),   ## 0x37 '7'
		(   413,  11,  17,  13,    1,  -16 ),   ## 0x38 '8'
		(   437,  11,  17,  13,    1,  -16 ),   ## 0x39 '9'
		(   461,   2,  13,   6,    2,  -12 ),   ## 0x3A ':'
		(   465,   2,  17,   6,    2,  -12 ),   ## 0x3B ';'
		(   470,  12,  12,  14,    1,  -11 ),   ## 0x3C '<'
		(   488,  12,   7,  14,    1,   -9 ),   ## 0x3D '='
		(   499,  12,  12,  14,    1,  -11 ),   ## 0x3E '>'
		(   517,  11,  17,  13,    0,  -16 ),   ## 0x3F '?'
		(   541,  17,  17,  23,    3,  -16 ),   ## 0x40 '@'
		(   578,  16,  17,  16,    0,  -16 ),   ## 0x41 'A'
		(   612,  13,  17,  16,    2,  -16 ),   ## 0x42 'B'
		(   640,  15,  17,  17,    1,  -16 ),   ## 0x43 'C'
		(   672,  14,  17,  17,    2,  -16 ),   ## 0x44 'D'
		(   702,  13,  17,  16,    2,  -16 ),   ## 0x45 'E'
		(   730,  12,  17,  14,    2,  -16 ),   ## 0x46 'F'
		(   756,  15,  17,  18,    1,  -16 ),   ## 0x47 'G'
		(   788,  13,  17,  17,    2,  -16 ),   ## 0x48 'H'
		(   816,   2,  17,   6,    2,  -16 ),   ## 0x49 'I'
		(   821,  10,  17,  13,    1,  -16 ),   ## 0x4A 'J'
		(   843,  14,  17,  16,    2,  -16 ),   ## 0x4B 'K'
		(   873,  11,  17,  14,    2,  -16 ),   ## 0x4C 'L'
		(   897,  16,  17,  20,    2,  -16 ),   ## 0x4D 'M'
		(   931,  13,  17,  17,    2,  -16 ),   ## 0x4E 'N'
		(   959,  16,  17,  18,    1,  -16 ),   ## 0x4F 'O'
		(   993,  12,  17,  15,    2,  -16 ),   ## 0x50 'P'
		(  1019,  16,  18,  18,    1,  -16 ),   ## 0x51 'Q'
		(  1055,  14,  18,  17,    2,  -16 ),   ## 0x52 'R'
		(  1087,  13,  17,  15,    1,  -16 ),   ## 0x53 'S'
		(  1115,  14,  17,  16,    1,  -16 ),   ## 0x54 'T'
		(  1145,  13,  17,  17,    2,  -16 ),   ## 0x55 'U'
		(  1173,  16,  17,  16,    0,  -16 ),   ## 0x56 'V'
		(  1207,  22,  17,  22,    0,  -16 ),   ## 0x57 'W'
		(  1254,  16,  17,  16,    0,  -16 ),   ## 0x58 'X'
		(  1288,  16,  17,  16,    0,  -16 ),   ## 0x59 'Y'
		(  1322,  13,  17,  15,    1,  -16 ),   ## 0x5A 'Z'
		(  1350,   5,  22,   6,    1,  -16 ),   ## 0x5B '['
		(  1364,   8,  17,   7,   -1,  -16 ),   ## 0x5C '\'
		(  1381,   5,  22,   6,    0,  -16 ),   ## 0x5D ']'
		(  1395,  13,  11,  11,   -1,  -16 ),   ## 0x5E '^'
		(  1413,  13,   1,  13,    0,    3 ),   ## 0x5F '_'
		(  1415,   5,   4,   8,    0,  -16 ),   ## 0x60 '`'
		(  1418,  12,  13,  13,    1,  -12 ),   ## 0x61 'a'
		(  1438,  11,  17,  13,    1,  -16 ),   ## 0x62 'b'
		(  1462,  11,  13,  12,    1,  -12 ),   ## 0x63 'c'
		(  1480,  11,  17,  13,    1,  -16 ),   ## 0x64 'd'
		(  1504,  11,  13,  13,    1,  -12 ),   ## 0x65 'e'
		(  1522,   6,  17,   8,    1,  -16 ),   ## 0x66 'f'
		(  1535,  11,  18,  13,    1,  -12 ),   ## 0x67 'g'
		(  1560,  10,  17,  14,    2,  -16 ),   ## 0x68 'h'
		(  1582,   2,  17,   6,    2,  -16 ),   ## 0x69 'i'
		(  1587,   4,  22,   6,    0,  -16 ),   ## 0x6A 'j'
		(  1598,  11,  17,  12,    2,  -16 ),   ## 0x6B 'k'
		(  1622,   2,  17,   6,    2,  -16 ),   ## 0x6C 'l'
		(  1627,  16,  13,  20,    2,  -12 ),   ## 0x6D 'm'
		(  1653,  10,  13,  14,    2,  -12 ),   ## 0x6E 'n'
		(  1670,  11,  13,  13,    1,  -12 ),   ## 0x6F 'o'
		(  1688,  11,  18,  13,    1,  -12 ),   ## 0x70 'p'
		(  1713,  11,  18,  13,    1,  -12 ),   ## 0x71 'q'
		(  1738,   6,  13,   9,    2,  -12 ),   ## 0x72 'r'
		(  1748,  11,  13,  12,    0,  -12 ),   ## 0x73 's'
		(  1766,   6,  17,   8,    1,  -16 ),   ## 0x74 't'
		(  1779,  10,  13,  14,    2,  -12 ),   ## 0x75 'u'
		(  1796,  12,  13,  12,    0,  -12 ),   ## 0x76 'v'
		(  1816,  17,  13,  17,    0,  -12 ),   ## 0x77 'w'
		(  1844,  12,  13,  12,    0,  -12 ),   ## 0x78 'x'
		(  1864,  13,  18,  12,   -1,  -12 ),   ## 0x79 'y'
		(  1894,  11,  13,  12,    1,  -12 ),   ## 0x7A 'z'
		(  1912,   6,  24,   8,    1,  -18 ),   ## 0x7B '{'
		(  1930,   2,  24,   6,    2,  -17 ),   ## 0x7C '|'
		(  1936,   6,  24,   8,    1,  -18 ),   ## 0x7D '}'
		(  1954,  12,   5,  14,    1,   -7 )	## 0x7E '~'
			)

		self.GFXfirst = 0x20
		self.GFXlast = 0x7E
		self.GFXyadvance = 27
				## from face->size->metrics.height
	def __repr__ (self):
		rows = ''
		for y in range(self.height):
			for x in range(self.width):
				rows += '*' if self.pixels[y * self.width + x] else ' '
		rows += '\n'
		return rows

## Approx. 2634 bytes
