class GFXfont:
	def __init__(self):
		self.GFXbitmaps = (
		0x06, 0x1C, 0x38, 0x70, 0xE3, 0x87, 0x0C, 0x30, 0x40, 0x81, 0x00, 0x08,
		0x1C, 0x78, 0xE0, 0x22, 0x66, 0x66, 0x44, 0x44, 0x88, 0x0E, 0x38, 0x61,
		0x83, 0x0C, 0x18, 0x60, 0xC3, 0x7F, 0xFF, 0xFF, 0xE3, 0x0C, 0x18, 0x60,
		0xC3, 0x3F, 0xFF, 0xFF, 0xF3, 0x0C, 0x18, 0x60, 0xC3, 0x0C, 0x30, 0x61,
		0x80, 0x00, 0x80, 0x78, 0x3B, 0x8E, 0xB1, 0xD4, 0x32, 0x07, 0x80, 0x70,
		0x0F, 0x00, 0xE0, 0x1E, 0x02, 0xC4, 0x78, 0x97, 0x32, 0xC3, 0x78, 0x3C,
		0x02, 0x00, 0x40, 0x00, 0x2C, 0x06, 0x36, 0x1E, 0x33, 0xF3, 0x19, 0x83,
		0x0C, 0xC3, 0x06, 0xC1, 0x81, 0xC1, 0x80, 0x00, 0xC0, 0x00, 0xC0, 0x00,
		0xC0, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x30, 0x00, 0x30, 0x00,
		0x38, 0x16, 0x18, 0x1B, 0x18, 0x09, 0x8C, 0x0C, 0xCC, 0x06, 0x6C, 0x03,
		0x60, 0x01, 0xB0, 0x00, 0x70, 0x00, 0x70, 0x03, 0x30, 0x06, 0x40, 0x1C,
		0x00, 0x38, 0x00, 0x70, 0x00, 0xE0, 0x03, 0xC0, 0x1B, 0x80, 0x67, 0x81,
		0x8F, 0x03, 0x0E, 0x0E, 0x1E, 0x1C, 0x3C, 0x3C, 0xFC, 0xFF, 0x3E, 0x78,
		0x38, 0x26, 0x64, 0x48, 0x00, 0x60, 0x30, 0x0C, 0x03, 0x00, 0xE0, 0x38,
		0x0E, 0x01, 0xC0, 0x78, 0x0E, 0x03, 0xC0, 0x78, 0x0E, 0x01, 0xC0, 0x38,
		0x07, 0x00, 0xE0, 0x0C, 0x01, 0x80, 0x30, 0x03, 0x00, 0x20, 0x02, 0x00,
		0x04, 0x00, 0x80, 0x30, 0x06, 0x01, 0x80, 0x60, 0x1C, 0x07, 0x01, 0xC0,
		0x70, 0x1C, 0x0F, 0x03, 0xC0, 0xE0, 0x38, 0x1C, 0x07, 0x03, 0x80, 0xE0,
		0x70, 0x38, 0x18, 0x0C, 0x00, 0x10, 0x03, 0x86, 0x1C, 0xE0, 0xDC, 0x05,
		0x07, 0xFF, 0xF2, 0xF6, 0x63, 0x06, 0x00, 0x70, 0x06, 0x00, 0x03, 0x00,
		0x0C, 0x00, 0x30, 0x00, 0xC0, 0x03, 0x00, 0x0C, 0x0F, 0xFF, 0xFF, 0xFF,
		0x03, 0x00, 0x0C, 0x00, 0x30, 0x00, 0xC0, 0x03, 0x00, 0x0C, 0x00, 0x11,
		0xDE, 0x31, 0x33, 0x00, 0x3E, 0x7E, 0x7C, 0x47, 0xFE, 0x07, 0x07, 0x0E,
		0x0E, 0x0E, 0x0E, 0x1E, 0x1C, 0x1C, 0x1C, 0x1C, 0x38, 0x38, 0x38, 0x38,
		0x78, 0x70, 0x70, 0x70, 0x70, 0xE0, 0xE0, 0x01, 0xB0, 0x37, 0x0E, 0x71,
		0xC7, 0x18, 0x73, 0x83, 0x70, 0x17, 0x02, 0x70, 0x2E, 0x02, 0xE0, 0x4E,
		0x04, 0xE0, 0xCE, 0x18, 0xF3, 0x07, 0xE0, 0x3C, 0x00, 0x07, 0x0E, 0x1E,
		0x2E, 0x4E, 0x5C, 0x1C, 0x1C, 0x3C, 0x38, 0x38, 0x38, 0x70, 0x70, 0x70,
		0xE0, 0xE0, 0x03, 0xE0, 0x63, 0x84, 0x0E, 0x20, 0x73, 0x03, 0x9C, 0x1C,
		0xC1, 0xC0, 0x0C, 0x00, 0xC0, 0x1C, 0x01, 0x80, 0x18, 0x01, 0x00, 0x10,
		0x09, 0xFF, 0xDF, 0xFC, 0xFF, 0xC0, 0x07, 0xC1, 0x8E, 0x30, 0x73, 0x07,
		0x30, 0x70, 0x0E, 0x01, 0xC0, 0xF0, 0x0F, 0xC0, 0x1C, 0x00, 0xE0, 0x0E,
		0x40, 0xEC, 0x0E, 0xC1, 0xCE, 0x38, 0x3E, 0x00, 0x00, 0x70, 0x0F, 0x01,
		0xE0, 0x2E, 0x04, 0xE0, 0x9C, 0x11, 0xC2, 0x1C, 0x61, 0xC4, 0x3B, 0xFF,
		0xFF, 0xFE, 0x07, 0x00, 0x70, 0x07, 0x00, 0xE0, 0x0E, 0x00, 0x07, 0xF0,
		0x7E, 0x07, 0xE0, 0x80, 0x08, 0x00, 0x80, 0x10, 0x01, 0xF0, 0x1F, 0xC0,
		0x1E, 0x00, 0xE0, 0x0E, 0x40, 0xEC, 0x0E, 0xC1, 0xC6, 0x38, 0x3E, 0x00,
		0x01, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0xC0, 0x70, 0x1E, 0x03, 0x9C, 0xF7,
		0xDE, 0x3F, 0x83, 0xF0, 0x7E, 0x0F, 0xC3, 0x98, 0x73, 0x9C, 0x3E, 0x00,
		0x7F, 0xDF, 0xF7, 0xFB, 0x02, 0x81, 0x00, 0x80, 0x20, 0x10, 0x0C, 0x07,
		0x01, 0x80, 0xE0, 0x70, 0x1C, 0x07, 0x03, 0x80, 0xE0, 0x00, 0x03, 0x61,
		0xDC, 0x33, 0x8E, 0x71, 0xC4, 0x39, 0x07, 0x40, 0x70, 0x0F, 0x06, 0x61,
		0x8E, 0x21, 0xC8, 0x39, 0x07, 0x20, 0xC2, 0x30, 0x3C, 0x00, 0x0F, 0x87,
		0x39, 0xC3, 0x38, 0x7E, 0x0F, 0xC1, 0xF8, 0x7F, 0x8F, 0x7D, 0xE7, 0x38,
		0x0F, 0x01, 0xC0, 0x70, 0x1E, 0x07, 0x81, 0xC0, 0x60, 0x00, 0x10, 0x73,
		0xCE, 0x00, 0x00, 0x10, 0x73, 0xC6, 0x00, 0x08, 0x1C, 0x78, 0x60, 0x00,
		0x00, 0x08, 0x7C, 0x78, 0x70, 0xC7, 0x18, 0x00, 0x00, 0x08, 0x03, 0xC0,
		0x7C, 0x1F, 0x03, 0xE0, 0x78, 0x03, 0xC0, 0x07, 0xC0, 0x0F, 0x80, 0x0F,
		0x80, 0x1E, 0x00, 0x10, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x03, 0xFF, 0xFF, 0xFF, 0x80, 0x07, 0x80, 0x1F, 0x80, 0x1F, 0x80,
		0x1F, 0x00, 0x1C, 0x00, 0xE0, 0x3E, 0x0F, 0xC3, 0xF0, 0x3C, 0x01, 0x00,
		0x00, 0x1E, 0x3F, 0x99, 0xF8, 0x7C, 0x3F, 0x1C, 0x1C, 0x0C, 0x1C, 0x1C,
		0x08, 0x04, 0x00, 0x02, 0x01, 0xC1, 0xE0, 0xE0, 0x00, 0x01, 0xFC, 0x00,
		0x70, 0x30, 0x0C, 0x01, 0x81, 0x00, 0x0C, 0x20, 0x00, 0x46, 0x06, 0xE2,
		0x41, 0xDE, 0x2C, 0x39, 0xE2, 0x83, 0x1C, 0x28, 0x71, 0xC2, 0x86, 0x1C,
		0x28, 0xE3, 0x84, 0x8E, 0x78, 0x48, 0xE7, 0x88, 0x4F, 0xB9, 0x14, 0x71,
		0xE2, 0x60, 0x00, 0x22, 0x00, 0x04, 0x18, 0x01, 0x80, 0xE0, 0x70, 0x01,
		0xF8, 0x00, 0x01, 0xFC, 0x07, 0x0E, 0x0C, 0x1C, 0x1C, 0x1C, 0x38, 0x38,
		0x30, 0x38, 0x70, 0x70, 0x70, 0x70, 0xE0, 0x70, 0xE0, 0xF0, 0xE0, 0xE0,
		0xE0, 0xE0, 0xE0, 0xE0, 0xE1, 0xE1, 0xF3, 0xE3, 0x7E, 0xFC, 0x38, 0x78,
		0x00, 0xFC, 0x01, 0xC1, 0xC0, 0xC0, 0x38, 0x60, 0x67, 0x10, 0x71, 0xCC,
		0x38, 0x73, 0x0E, 0x1C, 0xF3, 0x8E, 0x18, 0xEE, 0x00, 0x71, 0x80, 0x1C,
		0x30, 0x07, 0x0E, 0x41, 0xC3, 0xB0, 0xE0, 0xEC, 0x3A, 0x73, 0x1D, 0x9C,
		0x7C, 0x3C, 0x00, 0x01, 0xE0, 0x31, 0x83, 0x06, 0x30, 0x33, 0x81, 0xB8,
		0x1D, 0xC9, 0xDC, 0x7E, 0xE1, 0xC7, 0x00, 0x38, 0x01, 0xC0, 0x0F, 0x00,
		0x38, 0x05, 0xF0, 0x67, 0xFC, 0x0F, 0x80, 0x03, 0xF0, 0x06, 0x0E, 0x04,
		0x03, 0x86, 0x0C, 0xE6, 0x0E, 0x7B, 0x0E, 0x1D, 0xE7, 0x0E, 0x63, 0x87,
		0x03, 0x83, 0x81, 0xC1, 0xC0, 0xE0, 0xC0, 0x70, 0xE0, 0x30, 0x60, 0x38,
		0x31, 0xF0, 0x31, 0xFC, 0x30, 0xE7, 0xE0, 0x00, 0x03, 0xE0, 0x67, 0x0E,
		0x31, 0xC2, 0x1C, 0x01, 0xC0, 0x0E, 0x00, 0x78, 0x0F, 0x83, 0x80, 0x60,
		0x0E, 0x00, 0xE0, 0x0E, 0x01, 0xF8, 0x77, 0xFC, 0x1F, 0x00, 0x03, 0xFC,
		0x1F, 0xF0, 0xFF, 0x86, 0x00, 0x10, 0x60, 0xC3, 0x83, 0x0C, 0x0E, 0x73,
		0x11, 0xFC, 0x0F, 0xE0, 0x7C, 0x01, 0x70, 0x01, 0xC1, 0x0E, 0x0C, 0x38,
		0x39, 0xC0, 0x7C, 0x00, 0x00, 0xF8, 0x06, 0x18, 0x38, 0x18, 0xE0, 0x33,
		0x80, 0x66, 0x01, 0xDC, 0x27, 0x38, 0x7E, 0xE0, 0x71, 0xC0, 0x03, 0x80,
		0x07, 0x01, 0xCE, 0x03, 0x9E, 0x0E, 0x5C, 0x3D, 0xBF, 0xBC, 0x1C, 0xF0,
		0x01, 0xC0, 0x0F, 0x80, 0x27, 0x00, 0x9C, 0x01, 0x30, 0x03, 0xC0, 0x00,
		0x01, 0xC4, 0x18, 0x1F, 0xC3, 0x81, 0x9C, 0x38, 0x18, 0x21, 0xC0, 0xC3,
		0x1C, 0x07, 0x30, 0xE0, 0x13, 0x8E, 0x40, 0x1C, 0x7E, 0x00, 0xFF, 0xC0,
		0x1F, 0xFC, 0x01, 0x39, 0xC0, 0x03, 0x8E, 0x00, 0x1C, 0x70, 0x20, 0xE3,
		0x87, 0x0E, 0x1E, 0x78, 0xE0, 0x7E, 0x3C, 0x01, 0xC0, 0x01, 0xC4, 0x0F,
		0xE0, 0x67, 0x03, 0x04, 0x0C, 0x30, 0x39, 0x80, 0x66, 0x00, 0x38, 0x00,
		0xE0, 0x03, 0x80, 0x1C, 0x00, 0x70, 0x01, 0xC1, 0x06, 0x0C, 0x38, 0x39,
		0xC0, 0x3C, 0x00, 0x03, 0x88, 0x3F, 0x83, 0x38, 0x30, 0x41, 0x84, 0x0E,
		0x60, 0x23, 0x00, 0x38, 0x01, 0xC0, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38,
		0x01, 0xC4, 0x1C, 0x40, 0xEC, 0x07, 0x80, 0xF0, 0x0D, 0x80, 0x98, 0x08,
		0xC0, 0x4C, 0x03, 0x80, 0x00, 0x03, 0x88, 0xE0, 0xFE, 0x3C, 0x33, 0xC5,
		0x0C, 0x10, 0x81, 0x86, 0x20, 0x39, 0xC4, 0x02, 0x38, 0x80, 0x06, 0x20,
		0x01, 0xD8, 0x00, 0x39, 0x80, 0x07, 0x38, 0x00, 0xE7, 0x00, 0x18, 0xE0,
		0x87, 0x1C, 0x70, 0xC3, 0x9E, 0x38, 0x7E, 0x3C, 0x07, 0x00, 0x00, 0x78,
		0x03, 0x18, 0x0C, 0x18, 0x30, 0x30, 0x60, 0x61, 0xC1, 0xC3, 0x8F, 0x07,
		0x1C, 0x0E, 0x00, 0x1C, 0x00, 0x30, 0x00, 0x60, 0x01, 0x80, 0x07, 0xC0,
		0x7F, 0xE1, 0xF3, 0xFC, 0xC1, 0xF0, 0x00, 0x18, 0x1C, 0x00, 0x38, 0x3C,
		0x00, 0x78, 0x78, 0x00, 0x58, 0x78, 0x00, 0x78, 0xB8, 0x00, 0xB8, 0xF0,
		0x00, 0xB9, 0x70, 0x00, 0xB9, 0x70, 0x01, 0xBA, 0xF0, 0x01, 0x3A, 0xE0,
		0x01, 0x3A, 0xE0, 0x03, 0x3C, 0xE0, 0x02, 0x34, 0xE0, 0x46, 0x38, 0xE1,
		0xEC, 0x38, 0xF3, 0xF8, 0x70, 0x7C, 0x70, 0x60, 0x78, 0x00, 0x30, 0x30,
		0x07, 0x07, 0x00, 0x70, 0xC0, 0x0F, 0x08, 0x00, 0xB0, 0x80, 0x0B, 0x10,
		0x00, 0xB9, 0x00, 0x13, 0x90, 0x01, 0x39, 0x00, 0x13, 0x90, 0x03, 0x3A,
		0x00, 0x23, 0xA0, 0x02, 0x3A, 0x04, 0x61, 0xC0, 0xCC, 0x1C, 0x0F, 0x81,
		0xC0, 0x70, 0x18, 0x00, 0x00, 0x00, 0x07, 0x38, 0x39, 0x90, 0xCC, 0x46,
		0x61, 0x39, 0x84, 0xC6, 0x17, 0x1C, 0xDC, 0x22, 0xE0, 0x0B, 0x80, 0x4E,
		0x01, 0x38, 0x08, 0xE0, 0x63, 0x83, 0x0F, 0x18, 0x1F, 0xC0, 0x3C, 0x00,
		0x01, 0xF8, 0x07, 0x06, 0x0C, 0x03, 0x10, 0x1B, 0x30, 0x73, 0x30, 0xE7,
		0x3C, 0xE6, 0x18, 0xEC, 0x00, 0xE0, 0x01, 0xC0, 0x01, 0xC0, 0x01, 0xC0,
		0x61, 0xC0, 0xE1, 0x80, 0xE3, 0x80, 0xE6, 0x00, 0x7C, 0x00, 0x03, 0x30,
		0x39, 0x21, 0xCC, 0x86, 0x62, 0x39, 0x88, 0xC6, 0x27, 0x1C, 0x9C, 0x24,
		0xE0, 0x13, 0x80, 0x8E, 0x02, 0x38, 0xD0, 0xE7, 0xC3, 0x87, 0x1F, 0x1C,
		0xDF, 0xBE, 0x3C, 0x60, 0x01, 0xFC, 0x01, 0xC3, 0x80, 0xC0, 0x30, 0x60,
		0x6E, 0x30, 0x73, 0x8C, 0x38, 0xE3, 0x0E, 0x30, 0xE3, 0x9C, 0x30, 0xFC,
		0x00, 0x73, 0x00, 0x1C, 0xE0, 0x07, 0x38, 0x41, 0xDE, 0x30, 0xE7, 0x1C,
		0x31, 0xCF, 0x18, 0x7E, 0x7C, 0x0E, 0x00, 0x03, 0xC0, 0xC7, 0x08, 0x31,
		0x82, 0x18, 0x01, 0x80, 0x1C, 0x00, 0xF0, 0x07, 0x80, 0x1C, 0x00, 0xE0,
		0x06, 0x40, 0x6C, 0x06, 0xC0, 0xC6, 0x18, 0x3E, 0x00, 0x01, 0xF8, 0x07,
		0xFC, 0x30, 0x70, 0xC0, 0x01, 0x03, 0x06, 0x0C, 0x0C, 0x38, 0x1C, 0x70,
		0x10, 0xE0, 0x01, 0xC0, 0x03, 0x80, 0x07, 0x00, 0x0C, 0x08, 0x38, 0x30,
		0x60, 0x71, 0x80, 0x3E, 0x00, 0x1E, 0x07, 0x11, 0x83, 0x98, 0xE3, 0x88,
		0x71, 0xCC, 0x38, 0xE6, 0x38, 0xF3, 0x9C, 0x70, 0x8E, 0x38, 0x0E, 0x1C,
		0x07, 0x1E, 0x03, 0x8E, 0x03, 0x87, 0x01, 0xC7, 0x80, 0xE3, 0xC4, 0x72,
		0xE6, 0x3E, 0x7E, 0x0E, 0x1C, 0x00, 0x1C, 0x0C, 0x4C, 0x3D, 0x1C, 0x7E,
		0x38, 0x7C, 0x70, 0xF8, 0xE0, 0xF9, 0xC1, 0xA7, 0x02, 0x0E, 0x04, 0x1C,
		0x08, 0x30, 0x20, 0xE0, 0x41, 0xC1, 0x03, 0x82, 0x07, 0x08, 0x07, 0x20,
		0x07, 0x80, 0x1E, 0x07, 0x18, 0x8C, 0x1C, 0xF6, 0x38, 0xE3, 0xD0, 0xE3,
		0x87, 0xC3, 0x8E, 0x0F, 0x1C, 0x70, 0x3E, 0x71, 0xC0, 0xD1, 0xC7, 0x02,
		0x0E, 0x1C, 0x08, 0x38, 0xE0, 0x60, 0xE3, 0x81, 0x07, 0x0E, 0x08, 0x1C,
		0x78, 0x20, 0x71, 0xE1, 0x01, 0xCB, 0x88, 0x07, 0xCF, 0xC0, 0x0E, 0x1E,
		0x00, 0x07, 0x87, 0x0C, 0xCF, 0x18, 0xEA, 0x10, 0xF0, 0x30, 0xE0, 0x30,
		0xE0, 0x3C, 0xE0, 0x19, 0xE0, 0x01, 0xC0, 0x01, 0xC0, 0x01, 0xC0, 0x03,
		0xC0, 0x03, 0xC0, 0x45, 0xC1, 0xCD, 0xE3, 0xF8, 0xFC, 0x70, 0x78, 0x1E,
		0x01, 0xC4, 0x60, 0x39, 0x8E, 0x0E, 0x21, 0xC1, 0xCC, 0x38, 0x39, 0x8E,
		0x0F, 0x39, 0xC1, 0xE2, 0x38, 0x78, 0x0E, 0x0F, 0x01, 0xC3, 0xE0, 0x38,
		0x5C, 0x0E, 0x1F, 0x01, 0xC2, 0xE0, 0x38, 0x9D, 0x07, 0x33, 0xA0, 0xFC,
		0xE8, 0x0F, 0x1E, 0x00, 0x07, 0x80, 0x03, 0x60, 0x00, 0x9C, 0x00, 0x23,
		0x00, 0x04, 0xC0, 0x00, 0x70, 0x00, 0x07, 0x84, 0x7F, 0xF3, 0xFF, 0x9C,
		0x7C, 0x60, 0x11, 0xC1, 0x82, 0x08, 0x00, 0x40, 0x02, 0x00, 0x10, 0x00,
		0x80, 0x04, 0x00, 0x20, 0x00, 0x80, 0x17, 0xF0, 0xBF, 0xFC, 0x87, 0xC0,
		0x03, 0xE0, 0x60, 0x1C, 0x03, 0x80, 0x70, 0x0C, 0x03, 0x80, 0x70, 0x0C,
		0x03, 0x80, 0x70, 0x0E, 0x01, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x70, 0x0E,
		0x01, 0xC0, 0x30, 0x0E, 0x01, 0xF8, 0x00, 0xE0, 0xE0, 0x70, 0x70, 0x70,
		0x70, 0x78, 0x38, 0x38, 0x38, 0x38, 0x1C, 0x1C, 0x1C, 0x1C, 0x0E, 0x0E,
		0x0E, 0x0E, 0x0E, 0x07, 0x07, 0x03, 0xF0, 0x0E, 0x00, 0xE0, 0x0E, 0x00,
		0xC0, 0x1C, 0x01, 0xC0, 0x18, 0x03, 0x80, 0x38, 0x03, 0x80, 0x30, 0x07,
		0x00, 0x70, 0x07, 0x00, 0x60, 0x0E, 0x00, 0xE0, 0x0C, 0x01, 0xC0, 0x1C,
		0x0F, 0xC0, 0x0E, 0x01, 0xC0, 0x6C, 0x0D, 0x83, 0x18, 0xC1, 0x98, 0x36,
		0x03, 0xFF, 0xF0, 0xE3, 0x1C, 0x60, 0x80, 0x0F, 0x30, 0xCF, 0x0C, 0x38,
		0xE3, 0xCE, 0x1C, 0x70, 0xE3, 0x8F, 0x3C, 0xB9, 0xFD, 0xF3, 0x86, 0x00,
		0x03, 0x81, 0xF0, 0x7A, 0x0E, 0x41, 0xD0, 0x74, 0x0E, 0x83, 0xAC, 0x7B,
		0x8E, 0xF1, 0x9C, 0x73, 0x0E, 0x23, 0xCB, 0xFA, 0x77, 0xC0, 0x70, 0x00,
		0x0E, 0x1B, 0x99, 0xCC, 0x8E, 0x07, 0x03, 0x83, 0xE3, 0x7E, 0x1E, 0x00,
		0x00, 0x38, 0x01, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x03, 0x81,
		0xFC, 0x19, 0xE1, 0x87, 0x1C, 0x79, 0xC3, 0x8E, 0x1C, 0x71, 0xE7, 0x97,
		0x3F, 0xBE, 0x70, 0xC0, 0x0E, 0x1B, 0x99, 0xCC, 0xEE, 0xC7, 0xC3, 0x83,
		0xE3, 0x7E, 0x1E, 0x00, 0x01, 0xC1, 0xD0, 0x64, 0x39, 0x0C, 0x87, 0x21,
		0xD0, 0x78, 0x3C, 0x0E, 0x03, 0x81, 0xE0, 0xF8, 0x3E, 0x17, 0x8D, 0xFE,
		0x7E, 0x1C, 0x07, 0x01, 0xC0, 0xE0, 0x38, 0x0E, 0x00, 0x0E, 0x43, 0xBC,
		0x31, 0xC7, 0x38, 0xE3, 0x8E, 0x38, 0xE3, 0x9E, 0x7B, 0xFF, 0xC7, 0x70,
		0x1F, 0x06, 0x60, 0xCE, 0x08, 0xC0, 0x98, 0x07, 0x00, 0x01, 0x80, 0xE8,
		0x1C, 0x81, 0xC8, 0x39, 0x03, 0x90, 0x7A, 0x07, 0x7C, 0x77, 0xC7, 0x9C,
		0xF3, 0x8E, 0x38, 0xE3, 0x8E, 0x71, 0xE7, 0x2E, 0x7C, 0xE3, 0x80, 0x1C,
		0xE0, 0x00, 0x18, 0xE7, 0x1C, 0xF3, 0x8E, 0x79, 0xF9, 0x80, 0x02, 0x81,
		0xC1, 0xC0, 0x00, 0x00, 0x38, 0x38, 0x3C, 0x3E, 0x37, 0x13, 0x91, 0xD0,
		0xF8, 0xF0, 0x70, 0x78, 0x5C, 0x4C, 0x26, 0x12, 0x06, 0x00, 0x01, 0xC0,
		0xE4, 0x1E, 0x41, 0xCC, 0x3C, 0x83, 0x98, 0x7B, 0x07, 0x7C, 0x78, 0xE7,
		0x0E, 0xF1, 0xCE, 0xF0, 0xE7, 0x0E, 0x71, 0xE7, 0x3E, 0x7C, 0xE3, 0x80,
		0x03, 0x0D, 0x19, 0x19, 0x3B, 0x32, 0x72, 0x74, 0x7C, 0x78, 0xF0, 0xE0,
		0xE0, 0xE1, 0xE2, 0xFC, 0x78, 0x39, 0x8E, 0x19, 0xEF, 0x1D, 0x7B, 0x8F,
		0x79, 0xCF, 0x38, 0xE7, 0x1C, 0xE3, 0x8E, 0x73, 0xC7, 0x3B, 0xE7, 0x1E,
		0x63, 0x8E, 0x00, 0x39, 0x83, 0x3C, 0x75, 0xC7, 0xB8, 0xF3, 0x8E, 0x70,
		0xE7, 0x1E, 0x73, 0xE7, 0xEE, 0x38, 0x0F, 0x87, 0x31, 0xCE, 0x31, 0xCE,
		0x31, 0xC6, 0x38, 0x4F, 0x97, 0x7C, 0x0F, 0x00, 0x1D, 0xE1, 0xFF, 0x3C,
		0x73, 0xC7, 0x78, 0x7F, 0x87, 0xB8, 0xE3, 0x8C, 0x79, 0xC7, 0x70, 0x70,
		0x07, 0x00, 0x70, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0x0F, 0x30, 0xCF, 0x0E,
		0x38, 0xE3, 0x87, 0x1C, 0x70, 0xE3, 0x8F, 0x3C, 0xF3, 0xFB, 0x93, 0x9D,
		0x00, 0xD0, 0x0F, 0x00, 0x78, 0x03, 0x80, 0x3C, 0x01, 0xC0, 0x31, 0x39,
		0x9D, 0x8F, 0xC6, 0xE2, 0x62, 0x72, 0x39, 0x1F, 0x06, 0x00, 0x0E, 0x0E,
		0x1E, 0x3F, 0x67, 0x47, 0x87, 0x46, 0xCC, 0x70, 0x00, 0x18, 0x71, 0xC3,
		0x9F, 0xBF, 0x38, 0x71, 0xC3, 0x87, 0x1E, 0x7F, 0x1C, 0x00, 0x38, 0xE3,
		0x8E, 0x1C, 0x70, 0xE3, 0x8E, 0x38, 0x71, 0xC3, 0x8E, 0x3C, 0xF2, 0xFB,
		0xE3, 0x0E, 0x00, 0x38, 0xCE, 0x39, 0xCF, 0x39, 0xEE, 0x39, 0xC7, 0x38,
		0x4F, 0x16, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x38, 0xE6, 0x71, 0xCE, 0x71,
		0xDE, 0x71, 0xDE, 0xE3, 0x9C, 0xE3, 0x9C, 0xE3, 0x89, 0xE7, 0x96, 0xFF,
		0xE0, 0x71, 0xC0, 0x07, 0x38, 0x2E, 0x91, 0x1C, 0x48, 0x70, 0x43, 0x83,
		0x0E, 0x08, 0x38, 0x51, 0xE1, 0x45, 0x98, 0xE3, 0x80, 0x38, 0x61, 0xC7,
		0x1C, 0x38, 0xE3, 0x87, 0x1C, 0x71, 0xE3, 0x8E, 0x3C, 0xF2, 0xFB, 0xA3,
		0xBE, 0x03, 0xC0, 0x2E, 0x02, 0x60, 0x27, 0x01, 0x30, 0x0F, 0x00, 0x0F,
		0xE0, 0xF8, 0x10, 0x82, 0x10, 0x42, 0x0C, 0x40, 0x8C, 0x10, 0xF1, 0x1F,
		0xE2, 0x38, 0x0E, 0x38, 0xE1, 0xC3, 0x83, 0x87, 0x0E, 0x18, 0x63, 0x03,
		0x81, 0x83, 0x87, 0x1E, 0x38, 0x70, 0xE0, 0xE0, 0xE0, 0x00, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xE0, 0x38, 0x1C, 0x1C, 0x1C, 0x3C, 0x38,
		0x38, 0x18, 0x0C, 0x03, 0x0E, 0x18, 0x38, 0x38, 0x38, 0x1C, 0x1C, 0x1C,
		0x38, 0xE0, 0x78, 0x0B, 0xF8, 0xF1, 0xFD, 0x01, 0xC0 )


		#   Format of the following GFXglyphs tuple is as follows:
		#
		#   bitmapOffset   - offset into the GFXbitmaps tuple 
		#   width   - width of the character 
		#   height  - height of the character 
		#   xAdvance    - The horizontal distance the cursor position must be incremented 
		#               (for left-to-right writing) or decremented (for right-to-left writing) 
		#                  by after each glyph is rendered when processing text. 
		#                   It is always positive for horizontal layouts, and null for vertical ones.
		#   xOffset - The horizontal distance from the current pen position to the
		#               glyph's left bbox (glyph's boundary box) edge. 
		#               It is positive for horizontal layouts, and in most cases negative for vertical ones.
		#   yOffset -  The vertical distance from the baseline to the top of the glyph'sbbox.
		#               It is usually positive for horizontal layouts, and negative for vertical ones.

		self.GFXglyphs = (
		(     0,   0,   0,   6,    0,    1 ),   ## 0x20 ' '
		(     0,   7,  17,   8,    1,  -16 ),   ## 0x21 '!'
		(    15,   8,   6,  11,    3,  -15 ),   ## 0x22 '"'
		(    21,  13,  17,  16,    1,  -16 ),   ## 0x23 '#'
		(    49,  11,  19,  13,    1,  -16 ),   ## 0x24 '$'
		(    76,  17,  23,  18,    1,  -16 ),   ## 0x25 '%'
		(   125,  15,  17,  16,    1,  -16 ),   ## 0x26 '&'
		(   157,   4,   6,   6,    3,  -16 ),   ## 0x27 '''
		(   160,  11,  23,  12,    1,  -16 ),   ## 0x28 '('
		(   192,  10,  23,  12,    1,  -16 ),   ## 0x29 ')'
		(   221,  12,  11,  12,    0,  -16 ),   ## 0x2A '*'
		(   238,  14,  14,  16,    2,  -13 ),   ## 0x2B '+'
		(   263,   5,   7,   6,    0,   -2 ),   ## 0x2C ','
		(   268,   8,   3,   8,    0,   -6 ),   ## 0x2D '-'
		(   271,   4,   4,   5,    0,   -3 ),   ## 0x2E '.'
		(   273,   8,  22,  10,    1,  -16 ),   ## 0x2F '/'
		(   295,  12,  17,  13,    1,  -16 ),   ## 0x30 '0'
		(   321,   8,  17,  10,    1,  -16 ),   ## 0x31 '1'
		(   338,  13,  17,  13,    0,  -16 ),   ## 0x32 '2'
		(   366,  12,  17,  13,    0,  -16 ),   ## 0x33 '3'
		(   392,  12,  17,  13,    0,  -16 ),   ## 0x34 '4'
		(   418,  12,  17,  13,    0,  -16 ),   ## 0x35 '5'
		(   444,  11,  17,  13,    1,  -16 ),   ## 0x36 '6'
		(   468,  10,  17,  13,    2,  -16 ),   ## 0x37 '7'
		(   490,  11,  17,  13,    1,  -16 ),   ## 0x38 '8'
		(   514,  11,  17,  13,    1,  -16 ),   ## 0x39 '9'
		(   538,   6,  11,   7,    0,  -10 ),   ## 0x3A ':'
		(   547,   7,  14,   8,    0,   -9 ),   ## 0x3B ';'
		(   560,  13,  12,  16,    2,  -11 ),   ## 0x3C '<'
		(   580,  13,   8,  16,    2,   -9 ),   ## 0x3D '='
		(   593,  13,  12,  16,    1,  -11 ),   ## 0x3E '>'
		(   613,   9,  17,  11,    1,  -16 ),   ## 0x3F '?'
		(   633,  20,  21,  20,    0,  -15 ),   ## 0x40 '@'
		(   686,  16,  17,  16,    0,  -16 ),   ## 0x41 'A'
		(   720,  18,  17,  18,    0,  -16 ),   ## 0x42 'B'
		(   759,  13,  17,  14,    1,  -16 ),   ## 0x43 'C'
		(   787,  17,  17,  18,    0,  -16 ),   ## 0x44 'D'
		(   824,  12,  17,  13,    1,  -16 ),   ## 0x45 'E'
		(   850,  14,  17,  15,    1,  -16 ),   ## 0x46 'F'
		(   880,  15,  23,  15,    0,  -16 ),   ## 0x47 'G'
		(   924,  21,  17,  21,    0,  -16 ),   ## 0x48 'H'
		(   969,  14,  17,  15,    1,  -16 ),   ## 0x49 'I'
		(   999,  13,  23,  13,    0,  -16 ),   ## 0x4A 'J'
		(  1037,  19,  17,  20,    1,  -16 ),   ## 0x4B 'K'
		(  1078,  15,  17,  15,    0,  -16 ),   ## 0x4C 'L'
		(  1110,  24,  17,  24,    0,  -16 ),   ## 0x4D 'M'
		(  1161,  20,  18,  21,    1,  -16 ),   ## 0x4E 'N'
		(  1206,  14,  17,  15,    1,  -16 ),   ## 0x4F 'O'
		(  1236,  16,  17,  16,    0,  -16 ),   ## 0x50 'P'
		(  1270,  14,  17,  15,    1,  -16 ),   ## 0x51 'Q'
		(  1300,  18,  17,  19,    1,  -16 ),   ## 0x52 'R'
		(  1339,  12,  17,  14,    0,  -16 ),   ## 0x53 'S'
		(  1365,  15,  17,  16,    1,  -16 ),   ## 0x54 'T'
		(  1397,  17,  17,  18,    1,  -16 ),   ## 0x55 'U'
		(  1434,  15,  17,  16,    1,  -16 ),   ## 0x56 'V'
		(  1466,  22,  17,  23,    1,  -16 ),   ## 0x57 'W'
		(  1513,  16,  17,  17,    1,  -16 ),   ## 0x58 'X'
		(  1547,  19,  23,  18,    1,  -16 ),   ## 0x59 'Y'
		(  1602,  14,  17,  14,    0,  -16 ),   ## 0x5A 'Z'
		(  1632,  11,  22,  12,    0,  -16 ),   ## 0x5B '['
		(  1663,   8,  22,  10,    1,  -16 ),   ## 0x5C '\'
		(  1685,  12,  22,  12,    0,  -16 ),   ## 0x5D ']'
		(  1718,  11,   8,  14,    2,  -15 ),   ## 0x5E '^'
		(  1729,  12,   1,  12,    0,    3 ),   ## 0x5F '_'
		(  1731,   5,   5,   8,    0,  -15 ),   ## 0x60 '`'
		(  1735,  13,  10,  13,    0,   -9 ),   ## 0x61 'a'
		(  1752,  11,  17,  11,    0,  -16 ),   ## 0x62 'b'
		(  1776,   9,  10,   9,    0,   -9 ),   ## 0x63 'c'
		(  1788,  13,  17,  13,    0,  -16 ),   ## 0x64 'd'
		(  1816,   9,  10,   9,    0,   -9 ),   ## 0x65 'e'
		(  1828,  10,  23,  10,    0,  -16 ),   ## 0x66 'f'
		(  1857,  12,  16,  12,    0,   -9 ),   ## 0x67 'g'
		(  1881,  12,  17,  12,    0,  -16 ),   ## 0x68 'h'
		(  1907,   6,  14,   6,    0,  -13 ),   ## 0x69 'i'
		(  1918,   9,  21,   9,    0,  -14 ),   ## 0x6A 'j'
		(  1942,  12,  17,  12,    0,  -16 ),   ## 0x6B 'k'
		(  1968,   8,  17,   8,    0,  -16 ),   ## 0x6C 'l'
		(  1985,  17,  10,  17,    0,   -9 ),   ## 0x6D 'm'
		(  2007,  12,  10,  12,    0,   -9 ),   ## 0x6E 'n'
		(  2022,  11,  10,  11,    0,   -9 ),   ## 0x6F 'o'
		(  2036,  12,  16,  14,    0,   -9 ),   ## 0x70 'p'
		(  2060,  13,  16,  13,    0,   -9 ),   ## 0x71 'q'
		(  2086,   9,  10,   9,    0,   -9 ),   ## 0x72 'r'
		(  2098,   8,  10,  10,    0,   -9 ),   ## 0x73 's'
		(  2108,   7,  15,   7,    0,  -14 ),   ## 0x74 't'
		(  2122,  13,  10,  13,    0,   -9 ),   ## 0x75 'u'
		(  2139,  11,  10,  11,    0,   -9 ),   ## 0x76 'v'
		(  2153,  16,  11,  16,    0,  -10 ),   ## 0x77 'w'
		(  2175,  14,  10,  14,    0,   -9 ),   ## 0x78 'x'
		(  2193,  13,  16,  13,    0,   -9 ),   ## 0x79 'y'
		(  2219,  12,  10,  12,    0,   -9 ),   ## 0x7A 'z'
		(  2234,   7,  22,   9,    2,  -15 ),   ## 0x7B '{'
		(  2254,   2,  24,  13,    6,  -17 ),   ## 0x7C '|'
		(  2260,   8,  22,   9,    0,  -16 ),   ## 0x7D '}'
		(  2282,  13,   4,  16,    2,   -9 )	## 0x7E '~'
			)

		self.GFXfirst = 0x20
		self.GFXlast = 0x7E
		self.GFXyadvance = 28
		self.GFXMinYadvance = -17
				## from face->size->metrics.height
	def __repr__ (self):
		rows = ''
		for y in range(self.height):
			for x in range(self.width):
				rows += '*' if self.pixels[y * self.width + x] else ' '
		rows += '\n'
		return rows

## Approx. 2961 bytes
